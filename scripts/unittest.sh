#!/bin/bash
# üß™ MANCER UNIT TESTS - Lokalne testy jednostkowe (venv)
set -euo pipefail

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$PROJECT_ROOT"

# Kolory
G='\033[0;32m'; R='\033[0;31m'; Y='\033[1;33m'; B='\033[0;34m'; C='\033[0;36m'; NC='\033[0m'

log() { echo -e "${B}[TEST]${NC} $1"; }
ok() { echo -e "${G}[OK]${NC} $1"; }
fail() { echo -e "${R}[FAIL]${NC} $1"; }
warn() { echo -e "${Y}[WARN]${NC} $1"; }
info() { echo -e "${C}[INFO]${NC} $1"; }

# =============================================================================
# VENV SETUP
# =============================================================================

setup_venv() {
    log "Przygotowujƒô ≈õrodowisko wirtualne..."

    # Zawsze usu≈Ñ stary venv i utw√≥rz nowy
    if [[ -d ".venv" ]]; then
        log "Usuwam stare ≈õrodowisko wirtualne..."
        rm -rf .venv
    fi

    log "Tworzƒô nowe ≈õrodowisko wirtualne..."
    python3 -m venv .venv || {
        fail "Nie mo≈ºna utworzyƒá ≈õrodowiska wirtualnego"
        return 1
    }
    
    # Aktywuj venv
    source .venv/bin/activate || {
        fail "Nie mo≈ºna aktywowaƒá ≈õrodowiska wirtualnego"
        return 1
    }
    
    ok "≈örodowisko wirtualne aktywne: $VIRTUAL_ENV"
    
    # Upgrade pip (cicho)
    python -m pip install --upgrade pip >/dev/null 2>&1 || true

    # Zainstaluj wszystkie wymagane zale≈ºno≈õci
    log "Instalujƒô zale≈ºno≈õci z requirements.txt..."
    pip install -r requirements.txt || {
        fail "Nie mo≈ºna zainstalowaƒá zale≈ºno≈õci"
        return 1
    }
    
    # Zawsze zainstaluj wersjƒô developerskƒÖ mancera
    log "Instalujƒô wersjƒô developerskƒÖ mancera..."

    # Najpierw odinstaluj je≈õli istnieje
    pip uninstall mancer -y >/dev/null 2>&1 || true

    # Zainstaluj w trybie edytowalnym
    if pip install -e .; then
        log "Mancer zainstalowany w trybie edytowalnym"
    else
        warn "Nie mo≈ºna zainstalowaƒá editable mancera, u≈ºywam PYTHONPATH"
        export PYTHONPATH="$PROJECT_ROOT/src:${PYTHONPATH:-}"
    fi
    
    # Sprawd≈∫ czy mancer jest dostƒôpny
    if python -c "import mancer; print(f'Mancer {mancer.__version__} ready')" 2>/dev/null | grep -q "ready"; then
        ok "Framework mancer dostƒôpny w venv"
    else
        if PYTHONPATH="$PROJECT_ROOT/src" python -c "from mancer.application.shell_runner import ShellRunner" 2>/dev/null; then
            export PYTHONPATH="$PROJECT_ROOT/src:${PYTHONPATH:-}"
            ok "Framework mancer dostƒôpny przez PYTHONPATH"
        else
            fail "Framework mancer nie jest dostƒôpny"
            return 1
        fi
    fi
    
    return 0
}

# =============================================================================
# TESTY JEDNOSTKOWE
# =============================================================================

run_unit_tests() {
    echo -e "${B}"
    echo "================================================================="
    echo "üß™ TESTY JEDNOSTKOWE (LOCAL MODE)"
    echo "================================================================="
    echo -e "${NC}"
    
    setup_venv || return 1
    
    log "Uruchamiam testy jednostkowe lokalnie..."
    echo
    
    # Uruchom testy z PYTHONPATH
    if PYTHONPATH="$PROJECT_ROOT/src" python -m pytest tests/unit/ -v --tb=short; then
        echo
        ok "üéâ Testy jednostkowe przesz≈Çy pomy≈õlnie!"
        return 0
    else
        echo
        fail "‚ùå Testy jednostkowe nie przesz≈Çy"
        return 1
    fi
}

# =============================================================================
# CLEANUP
# =============================================================================

cleanup() {
    if [[ -n "${VIRTUAL_ENV:-}" ]]; then
        info "Pozostajƒô w ≈õrodowisku wirtualnym dla dalszej pracy..."
        echo "Aby wyj≈õƒá z venv, u≈ºyj: deactivate"
    fi
}

# =============================================================================
# MAIN
# =============================================================================

main() {
    if [[ $# -gt 0 ]]; then
        case "$1" in
            "help"|"h"|"-h"|"--help")
                echo -e "${B}"
                echo "================================================================="
                echo "üß™ MANCER UNIT TESTS - Lokalne testy jednostkowe"
                echo "================================================================="
                echo -e "${NC}"
                echo "Uruchamia testy jednostkowe w ≈õrodowisku wirtualnym Python."
                echo
                echo "U≈ºycie: $0"
                echo
                echo "Funkcjonalno≈õƒá:"
                echo "- Tworzy/aktywuje .venv"
                echo "- Instaluje pytest"
                echo "- Instaluje framework (pip install -e .)"
                echo "- Fallback na PYTHONPATH=src/"
                echo "- Uruchamia pytest tests/unit/"
                echo
                echo "Zmienne ≈õrodowiskowe:"
                echo "  FORCE_REINSTALL=true # Wymusi reinstalacjƒô mancera"
                echo
                exit 0
                ;;
            *)
                echo -e "${R}‚ùå Nieznana opcja: $1${NC}"
                echo "U≈ºyj '$0 help' aby zobaczyƒá pomoc."
                exit 1
                ;;
        esac
    fi
    
    # Uruchom testy jednostkowe
    run_unit_tests
}

# Trap cleanup
trap cleanup EXIT

# Execute main function
main "$@" 