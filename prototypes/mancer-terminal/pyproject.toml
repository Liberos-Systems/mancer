[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mancer-terminal"
version = "1.0.0"
description = "SSH Terminal Emulator with SCP support and SSH proxy, integrated with Mancer framework"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Mancer Team", email = "team@mancer.dev"}
]
maintainers = [
    {name = "Mancer Team", email = "team@mancer.dev"}
]
keywords = ["ssh", "terminal", "emulator", "scp", "proxy", "mancer", "pyqt6"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Terminals",
    "Topic :: Internet :: File Transfer Protocol (FTP)",
    "Topic :: Communications :: File Sharing",
    "Topic :: Security :: Cryptography",
]
requires-python = ">=3.8"
dependencies = [
    # Core GUI framework
    "PyQt6>=6.4.0",
    "PyQt6-Qt6>=6.4.0",
    "PyQt6-sip>=13.4.0",
    
    # SSH and networking
    "paramiko>=3.0.0",
    "asyncssh>=2.12.0",
    "cryptography>=3.4.8",
    
    # Terminal emulation
    "pyte>=0.8.0",
    "blessed>=1.20.0",
    
    # Configuration and utilities
    "pyyaml>=6.0",
    "configparser>=5.3.0",
    "loguru>=0.6.0",
    "python-dotenv>=0.19.0",
    "pathlib2>=2.3.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-qt>=4.2.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "tox>=4.6.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-qt>=4.2.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[project.urls]
Homepage = "https://github.com/your-org/mancer-terminal"
Documentation = "https://mancer-terminal.readthedocs.io/"
Repository = "https://github.com/your-org/mancer-terminal.git"
"Bug Tracker" = "https://github.com/your-org/mancer-terminal/issues"
"Source Code" = "https://github.com/your-org/mancer-terminal"

[project.scripts]
mancer-terminal = "mancer_terminal.main:main"

[project.gui-scripts]
mancer-terminal-gui = "mancer_terminal.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["mancer_terminal*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"mancer_terminal" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mancer_terminal"]
known_third_party = ["PyQt6", "paramiko", "asyncssh", "cryptography", "pyte", "blessed"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "PyQt6.*",
    "paramiko.*",
    "asyncssh.*",
    "cryptography.*",
    "pyte.*",
    "blessed.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gui: marks tests as GUI tests",
]

[tool.coverage.run]
source = ["mancer_terminal"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
