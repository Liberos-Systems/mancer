TODO — plan działań

- Logging
  - Wybrać i utrzymać wysokiej jakości backend logowania (standardowy `logging` + opcjonalnie Icecream).
  - Ujednolicić poziomy/format logów i konfigurację (env/pyproject, plik konfiguracyjny).

- Język i styl
  - Ustalić język kodu i dokumentacji: angielski (konsekwentnie w kodzie, README, docstrings).

- Architektura narzędzi
  - Rozdzielić ogólne `tools` od aplikacji budowanych na frameworku (np. „Config Master”).

- Config Master
  - Zaprojektować i zaimplementować „Config Master” (CLI, API, formaty plików, integracje).

- Procesy i połączenia
  - Zdecydować, jak zarządzać procesami uruchomieniowymi i konektorem do połączeń (lokal/SSH).

- Rdzeń systemu
  - Upewnić się, że bazowym obiektem w całym systemie jest `Mancer` (spójne API, kompozycja).

- Icecream (IC)
  - Doprecyzować zakres użycia „ic” (Icecream) i zapewnić łatwy przełącznik oraz bezpieczny fallback.

- MancerOps
  - Zdefiniować „mancerops” (zestaw operacji/automatyzacji) oraz jego zakres w repo.

- Observability
  - Dodać metryki/tracing/logi (np. integracja z OpenTelemetry/Prometheus, eksportery).

- Dokumentacja
  - Jak wygenerować dokumentację: przygotować Sphinx/Markdown, dodać komendę w README i skrypty.

- dodać support do pydantic.